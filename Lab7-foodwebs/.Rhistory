predator = predators$species[i],
prey = prey$species[j],
probability = probability
))
}
}
View(predators)
View(prey)
probEat <- function(alpha, beta, gamma, m_j, m_i) {
log_mass_ratio <- log(m_j / m_i)
square_log_mass_ratio <- log_mass_ratio^2
logit_prob <- alpha + beta * log_mass_ratio + gamma * square_log_mass_ratio
probability <- exp(logit_prob) / (1 + exp(logit_prob))
return(probability)
}
# Filter predators and prey
predators <- sp_mass[sp_mass$carnivore == 1, ]
prey <- sp_mass[sp_mass$carnivore == 0, ]
if (nrow(predators) == 0 | nrow(prey) == 0) {
stop("Predators or prey dataframe is empty. Check the 'carnivore' column in sp_mass.")
}
# Initialize results as a data frame
results <- data.frame(predator = character(),
prey = character(),
probability = numeric(),
stringsAsFactors = FALSE)
View(results)
for (i in 1:nrow(predators)) {
for (j in 1:nrow(prey)) {
m_j <- predators$male_mass[i]
m_i <- prey$male_mass[j]
probability <- probEat(alpha, beta, gamma, m_j, m_i)
# Append to results
results <- rbind(results, data.frame(
predator = predators$species[i],
prey = prey$species[j],
probability = probability
))
}
}
# Print results
print(results)
View(results)
View(sp_mass)
for (i in 1:nrow(predators)) {
for (j in 1:nrow(prey)) {
m_j <- predators$m[i]
m_i <- prey$m[j]
probability <- probEat(alpha, beta, gamma, m_j, m_i)
# Append to results
results <- rbind(results, data.frame(
predator = predators$species[i],
prey = prey$species[j],
probability = probability
))
}
}
View(predators)
probEat <- function(alpha, beta, gamma, m_j, m_i) {
log_mass_ratio <- log(m_j / m_i)
square_log_mass_ratio <- log_mass_ratio^2
logit_prob <- alpha + beta * log_mass_ratio + gamma * square_log_mass_ratio
probability <- exp(logit_prob) / (1 + exp(logit_prob))
return(probability)
}
# Constants
alpha <- 2.51
beta <- 0.79
gamma <- -0.37
sp_mass <- data.frame(
species = c("Species1", "Species2", "Species3", "Species4"),
male_mass = c(120, 80, 50, 200),
female_mass = c(125, 85, 55, 210),
carnivore = c(1, 0, 0, 1)
)
predators <- sp_mass[sp_mass$carnivore == 1, ]
prey <- sp_mass[sp_mass$carnivore == 0, ]
View(predators)
sp_mass$Species <- rownames(sp_mass)
head(sp_mass)
sp_occ <- read.table(file="data/egypt_data.txt", header = FALSE)
str(sp_occ)
sp_mass <- read.table(file="data/egypt_mass.txt", header=FALSE)
str(sp_mass)
colnames(sp_mass) <- c("f","m")
row_labs_sp <- c("Canis aureus", "Vulpes vulpes", "Lycaon pictus", "Hyaena hyaena", "Crocuta crocuta", "Panthera leo (long maned)", "Panthera leo (short maned)", "Panthera pardus", "Acinonyx jubatus", "Loxodonta africana", "Equus asinus", "Equus grevyi", "Equus quagga", "Diceros/Ceratotherium", "Sus scrofa",  "Phacochoerus aethiopicus", "Hippopotamus amphibius", "Giraffa camelopardalis", "Dama mesopotamica", "Camelus dromedarius", "Taurotragus oryx", "Tragelaphus spekei", "Addax nasomaculatus", "Oryx dammah", "Oryx beisa", "Hippotragus equinus", "Kobus kob", "Kobus megaceros", "Alcelaphus bucelaphus", "Connochaetes taurinus", "Litocranius walleri", "Ammodorcas clarkei", "Gazella dorcas", "Gazella leptoceros", "Gazella soemmerringii", "Capra ibex", "Ammotragus lervia", "Bos primigenius", "Syncerus caffer")
rownames(sp_occ) <- row_labs_sp
rownames(sp_mass) <- row_labs_sp
## Set 1 for predators, 0 for prey
carnivores <- c(rep(1, 9), rep(0, length(row_labs_sp)- 9))
names(carnivores) <- row_labs_sp
sp_occ <- cbind(sp_occ, carnivores)
sp_mass <- cbind(sp_mass, carnivores)
sp_mass$Species <- rownames(sp_mass)
head(sp_mass)
head(sp_occ)
probEat <- function(alpha, beta, gamma, m_j, m_i) {
log_mass_ratio <- log(m_j / m_i)
square_log_mass_ratio <- log_mass_ratio^2
logit_prob <- alpha + beta * log_mass_ratio + gamma * square_log_mass_ratio
probability <- exp(logit_prob) / (1 + exp(logit_prob))
return(probability)
}
# Constants
alpha <- 2.51
beta <- 0.79
gamma <- -0.37
# Example sp_mass dataframe
sp_mass <- data.frame(
species = c("Species1", "Species2", "Species3", "Species4"),
male_mass = c(120, 80, 50, 200),
female_mass = c(125, 85, 55, 210),
carnivore = c(1, 0, 0, 1)
)
predators <- sp_mass[sp_mass$carnivore == 1, ]
prey <- sp_mass[sp_mass$carnivore == 0, ]
View(predators)
if (nrow(predators) == 0 | nrow(prey) == 0) {
stop("Predators or prey dataframe is empty. Check the 'carnivore' column in sp_mass.")
}
results <- data.frame(predator = character(),
prey = character(),
probability = numeric(),
stringsAsFactors = FALSE)
View(results)
for (i in 1:nrow(predators)) {
for (j in 1:nrow(prey)) {
m_j <- predators$male_mass[i]
m_i <- prey$male_mass[j]
probability <- probEat(alpha, beta, gamma, m_j, m_i)
# Append to results
results <- rbind(results, data.frame(
predator = predators$species[i],
prey = prey$species[j],
probability = probability
))
}
}
# Print results
print(results)
sp_occ <- read.table(file="data/egypt_data.txt", header = FALSE)
str(sp_occ)
sp_mass <- read.table(file="data/egypt_mass.txt", header=FALSE)
str(sp_mass)
colnames(sp_mass) <- c("f","m")
row_labs_sp <- c("Canis aureus", "Vulpes vulpes", "Lycaon pictus", "Hyaena hyaena", "Crocuta crocuta", "Panthera leo (long maned)", "Panthera leo (short maned)", "Panthera pardus", "Acinonyx jubatus", "Loxodonta africana", "Equus asinus", "Equus grevyi", "Equus quagga", "Diceros/Ceratotherium", "Sus scrofa",  "Phacochoerus aethiopicus", "Hippopotamus amphibius", "Giraffa camelopardalis", "Dama mesopotamica", "Camelus dromedarius", "Taurotragus oryx", "Tragelaphus spekei", "Addax nasomaculatus", "Oryx dammah", "Oryx beisa", "Hippotragus equinus", "Kobus kob", "Kobus megaceros", "Alcelaphus bucelaphus", "Connochaetes taurinus", "Litocranius walleri", "Ammodorcas clarkei", "Gazella dorcas", "Gazella leptoceros", "Gazella soemmerringii", "Capra ibex", "Ammotragus lervia", "Bos primigenius", "Syncerus caffer")
rownames(sp_occ) <- row_labs_sp
rownames(sp_mass) <- row_labs_sp
## Set 1 for predators, 0 for prey
carnivores <- c(rep(1, 9), rep(0, length(row_labs_sp)- 9))
names(carnivores) <- row_labs_sp
sp_occ <- cbind(sp_occ, carnivores)
sp_mass <- cbind(sp_mass, carnivores)
sp_mass$Species <- rownames(sp_mass)
head(sp_mass)
head(sp_occ)
probEat <- function(alpha, beta, gamma, m_j, m_i) {
log_mass_ratio <- log(m_j / m_i)
square_log_mass_ratio <- log_mass_ratio^2
logit_prob <- alpha + beta * log_mass_ratio + gamma * square_log_mass_ratio
probability <- exp(logit_prob) / (1 + exp(logit_prob))
return(probability)
}
# Constants
alpha <- 2.51
beta <- 0.79
gamma <- -0.37
predators <- sp_mass[sp_mass$carnivore == 1, ]
prey <- sp_mass[sp_mass$carnivore == 0, ]
if (nrow(predators) == 0 | nrow(prey) == 0) {
stop("Predators or prey dataframe is empty. Check the 'carnivore' column in sp_mass.")
}
results <- data.frame(predator = character(),
prey = character(),
probability = numeric(),
stringsAsFactors = FALSE)
for (i in 1:nrow(predators)) {
for (j in 1:nrow(prey)) {
m_j <- predators$m[i]
m_i <- prey$m[j]
probability <- probEat(alpha, beta, gamma, m_j, m_i)
# Append to results
results <- rbind(results, data.frame(
predator = predators$species[i],
prey = prey$species[j],
probability = probability
))
}
}
View(predators)
View(results)
for (i in 1:nrow(predators)) {
for (j in 1:nrow(prey)) {
m_j <- predators$m[i]
m_i <- prey$m[j]
probability <- probEat(alpha, beta, gamma, m_j, m_i)
# Append to results
results <- rbind(results, data.frame(
predator = predators$Species[i],
prey = prey$Species[j],
probability = probability
))
}
}
# Print results
print(results)
View(results)
# Initialize results as a data frame
probability_results <- data.frame(predator = character(),
prey = character(),
probability = numeric(),
stringsAsFactors = FALSE)
for (i in 1:nrow(predators)) {
for (j in 1:nrow(prey)) {
m_j <- predators$m[i]
m_i <- prey$m[j]
probability <- probEat(alpha, beta, gamma, m_j, m_i)
# Append to results
probability_results <- rbind(probability_results, data.frame(
predator = predators$Species[i],
prey = prey$Species[j],
probability = probability
))
}
}
# Print results
print(probability_results)
remove(results)
View(probability_results)
library(igraph)
library(tidyverse)
library(bipartite)
library(networkD3)
sp_occ <- read.table(file="data/egypt_data.txt", header = FALSE)
str(sp_occ)
sp_mass <- read.table(file="data/egypt_mass.txt", header=FALSE)
str(sp_mass)
colnames(sp_mass) <- c("f","m")
row_labs_sp <- c("Canis aureus", "Vulpes vulpes", "Lycaon pictus", "Hyaena hyaena", "Crocuta crocuta", "Panthera leo (long maned)", "Panthera leo (short maned)", "Panthera pardus", "Acinonyx jubatus", "Loxodonta africana", "Equus asinus", "Equus grevyi", "Equus quagga", "Diceros/Ceratotherium", "Sus scrofa",  "Phacochoerus aethiopicus", "Hippopotamus amphibius", "Giraffa camelopardalis", "Dama mesopotamica", "Camelus dromedarius", "Taurotragus oryx", "Tragelaphus spekei", "Addax nasomaculatus", "Oryx dammah", "Oryx beisa", "Hippotragus equinus", "Kobus kob", "Kobus megaceros", "Alcelaphus bucelaphus", "Connochaetes taurinus", "Litocranius walleri", "Ammodorcas clarkei", "Gazella dorcas", "Gazella leptoceros", "Gazella soemmerringii", "Capra ibex", "Ammotragus lervia", "Bos primigenius", "Syncerus caffer")
rownames(sp_occ) <- row_labs_sp
rownames(sp_mass) <- row_labs_sp
## Set 1 for predators, 0 for prey
carnivores <- c(rep(1, 9), rep(0, length(row_labs_sp)- 9))
names(carnivores) <- row_labs_sp
sp_occ <- cbind(sp_occ, carnivores)
sp_mass <- cbind(sp_mass, carnivores)
sp_mass$Species <- rownames(sp_mass)
head(sp_mass)
head(sp_occ)
# Define probEat function
probEat <- function(alpha, beta, gamma, m_j, m_i) {
log_mass_ratio <- log(m_j / m_i)
square_log_mass_ratio <- log_mass_ratio^2
logit_prob <- alpha + beta * log_mass_ratio + gamma * square_log_mass_ratio
probability <- exp(logit_prob) / (1 + exp(logit_prob))
return(probability)
}
# Constants
alpha <- 2.51
beta <- 0.79
gamma <- -0.37
# Filter predators and prey
predators <- sp_mass[sp_mass$carnivore == 1, ]
prey <- sp_mass[sp_mass$carnivore == 0, ]
# Initialize results as a data frame
probability_results <- data.frame(predator = character(),
prey = character(),
probability = numeric(),
stringsAsFactors = FALSE)
# Nested loop for probabilities
for (i in 1:nrow(predators)) {
for (j in 1:nrow(prey)) {
m_j <- predators$m[i]
m_i <- prey$m[j]
probability <- probEat(alpha, beta, gamma, m_j, m_i)
# Append to results
probability_results <- rbind(probability_results, data.frame(
predator = predators$Species[i],
prey = prey$Species[j],
probability = probability
))
}
}
# Print results
print(probability_results)
# Define probEat function
probEat <- function(alpha, beta, gamma, m_j, m_i) {
log_mass_ratio <- log(m_j / m_i)
square_log_mass_ratio <- log_mass_ratio^2
logit_prob <- alpha + beta * log_mass_ratio + gamma * square_log_mass_ratio
probability <- exp(logit_prob) / (1 + exp(logit_prob))
return(probability)
}
# Constants
alpha <- 2.51
beta <- 0.79
gamma <- -0.37
# Filter predators and prey
predators <- sp_mass[sp_mass$carnivore == 1, ]
prey <- sp_mass[sp_mass$carnivore == 0, ]
# Initialize results as a data frame
probability_results <- data.frame(predator = character(),
prey = character(),
probability = numeric(),
stringsAsFactors = FALSE)
# Nested loop for probabilities
for (i in 1:nrow(predators)) {
for (j in 1:nrow(prey)) {
m_j <- predators$f[i]
m_i <- prey$f[j]
probability <- probEat(alpha, beta, gamma, m_j, m_i)
# Append to results
probability_results <- rbind(probability_results, data.frame(
predator = predators$Species[i],
prey = prey$Species[j],
probability = probability
))
}
}
# Print results
print(probability_results)
View(probability_results)
View(sp_mass)
#Empty matrix
species_list <- sp_mass$Species
num_species <- length(species_list)
feeding_matrix <- matrix(0, nrow = num_species, ncol = num_species, dimnames = list(species_list, species_list))
for (i in 1:num_species) {
for (j in 1:num_species) {
if (i != j) {  # Ensure we're not calculating a species eating itself
m_j <- sp_mass$male_mass[i]
m_i <- sp_mass$male_mass[j]
probability <- probEat(alpha, beta, gamma, m_j, m_i)
feeding_matrix[i, j] <- probability
}
}
}
# Fill in the matrix with feeding probabilities based on body sizes
for (i in 1:num_species) {
for (j in 1:num_species) {
if (i != j) {  # Ensure we're not calculating a species eating itself
m_j <- sp_mass$f[i]
m_i <- sp_mass$f[j]
probability <- probEat(alpha, beta, gamma, m_j, m_i)
feeding_matrix[i, j] <- probability
}
}
}
# Now use the carnivores vector to zero out interactions involving herbivores
feeding_matrix <- sweep(feeding_matrix, 1, carnivores, "*")  # Zero out rows of herbivores
feeding_matrix <- sweep(feeding_matrix, 2, carnivores, "*")  # Zero out columns of herbivores
row_sums <- rowSums(feeding_matrix)
col_sums <- colSums(feeding_matrix)
row_sums <- rowSums(feeding_matrix)
col_sums <- colSums(feeding_matrix)
print("Row sums (predator feeding counts):")
print(row_sums)
print("Column sums (prey being fed upon counts):")
print(col_sums)
print("Feeding Probability Matrix:") #Displays the feeding probabilities between species.
print(feeding_matrix)
species_list <- sp_mass$Species
num_species <- length(species_list)
feeding_matrix <- matrix(0, nrow = num_species, ncol = num_species, dimnames = list(species_list, species_list))
for (i in 1:num_species) {
for (j in 1:num_species) {
if (i != j) {  # Ensure we're not calculating a species eating itself
m_j <- sp_mass$f[i]
m_i <- sp_mass$f[j]
probability <- probEat(alpha, beta, gamma, m_j, m_i)
feeding_matrix[i, j] <- probability
}
}
}
feeding_matrix
# Now use the carnivores vector to zero out interactions involving herbivores
feeding_matrix <- sweep(feeding_matrix, 1, carnivores, "*")  # Zero out rows of herbivores
feeding_matrix
#Empty matrix
species_list <- sp_mass$Species
num_species <- length(species_list)
feeding_matrix <- matrix(0, nrow = num_species, ncol = num_species, dimnames = list(species_list, species_list))
# Fill in the matrix with feeding probabilities based on body sizes
for (i in 1:num_species) {
for (j in 1:num_species) {
if (i != j) {  # Ensure we're not calculating a species eating itself
m_j <- sp_mass$f[i]
m_i <- sp_mass$f[j]
probability <- probEat(alpha, beta, gamma, m_j, m_i)
feeding_matrix[i, j] <- probability
}
}
}
feeding_matrix
# Now use the carnivores vector to zero out interactions involving herbivores
feeding_matrix <- sweep(feeding_matrix, 2, carnivores, "*")  # Zero out columns of herbivores
feeding_matrix
?sweep
# Now use the carnivores vector to zero out interactions involving herbivores
feeding_matrix <- sweep(feeding_matrix, 2, carnivores, "*")  # Zero out columns of herbivores
# Print the row and column sums
row_sums <- rowSums(feeding_matrix)
col_sums <- colSums(feeding_matrix)
# Print the sums to see feeding interactions
print("Row sums (predator feeding counts):")
print(row_sums)
print("Column sums (prey being fed upon counts):")
print(col_sums)
# Optionally, print the matrix to inspect it
print("Feeding Probability Matrix:")
print(feeding_matrix)
# Now use the carnivores vector to zero out interactions involving herbivores
feeding_matrix <- sweep(feeding_matrix, 2, carnivores, "*")  # Zero out columns of herbivores
# Print the row and column sums
row_sums <- rowSums(feeding_matrix)
col_sums <- colSums(feeding_matrix)
# Print the sums to see feeding interactions
print("Row sums (predator feeding counts):")
print(row_sums)
print("Column sums (prey being fed upon counts):")
print(col_sums)
View(feeding_matrix)
View(predators)
num_predators <- length(predators$species)
num_predators <- length(predators$Species)
num_prey <- length(prey$Species)
feeding_matrix <- matrix(0, nrow = num_prey, ncol = num_predators, dimnames = list(species_list, species_list))
feeding_matrix <- matrix(0, nrow = num_prey, ncol = num_predators, dimnames = list(num_prey, num_predators))
feeding_matrix <- matrix(0, nrow = num_prey, ncol = num_predators, dimnames = list(num_predators, num_prey))
library(igraph)
library(tidyverse)
library(bipartite)
library(networkD3)
sp_occ <- read.table(file="data/egypt_data.txt", header = FALSE)
str(sp_occ)
sp_mass <- read.table(file="data/egypt_mass.txt", header=FALSE)
str(sp_mass)
colnames(sp_mass) <- c("f","m")
row_labs_sp <- c("Canis aureus", "Vulpes vulpes", "Lycaon pictus", "Hyaena hyaena", "Crocuta crocuta", "Panthera leo (long maned)", "Panthera leo (short maned)", "Panthera pardus", "Acinonyx jubatus", "Loxodonta africana", "Equus asinus", "Equus grevyi", "Equus quagga", "Diceros/Ceratotherium", "Sus scrofa",  "Phacochoerus aethiopicus", "Hippopotamus amphibius", "Giraffa camelopardalis", "Dama mesopotamica", "Camelus dromedarius", "Taurotragus oryx", "Tragelaphus spekei", "Addax nasomaculatus", "Oryx dammah", "Oryx beisa", "Hippotragus equinus", "Kobus kob", "Kobus megaceros", "Alcelaphus bucelaphus", "Connochaetes taurinus", "Litocranius walleri", "Ammodorcas clarkei", "Gazella dorcas", "Gazella leptoceros", "Gazella soemmerringii", "Capra ibex", "Ammotragus lervia", "Bos primigenius", "Syncerus caffer")
rownames(sp_occ) <- row_labs_sp
rownames(sp_mass) <- row_labs_sp
## Set 1 for predators, 0 for prey
carnivores <- c(rep(1, 9), rep(0, length(row_labs_sp)- 9))
names(carnivores) <- row_labs_sp
sp_occ <- cbind(sp_occ, carnivores)
sp_mass <- cbind(sp_mass, carnivores)
sp_mass$Species <- rownames(sp_mass)
head(sp_mass)
head(sp_occ)
# Define probEat function
probEat <- function(alpha, beta, gamma, m_j, m_i) {
log_mass_ratio <- log(m_j / m_i)
square_log_mass_ratio <- log_mass_ratio^2
logit_prob <- alpha + beta * log_mass_ratio + gamma * square_log_mass_ratio
probability <- exp(logit_prob) / (1 + exp(logit_prob))
return(probability)
}
# Constants
alpha <- 2.51
beta <- 0.79
gamma <- -0.37
# Filter predators and prey
predators <- sp_mass[sp_mass$carnivore == 1, ]
prey <- sp_mass[sp_mass$carnivore == 0, ]
# Initialize results as a data frame
probability_results <- data.frame(predator = character(),
prey = character(),
probability = numeric(),
stringsAsFactors = FALSE)
# Nested loop for probabilities
for (i in 1:nrow(predators)) {
for (j in 1:nrow(prey)) {
m_j <- predators$f[i]
m_i <- prey$f[j]
probability <- probEat(alpha, beta, gamma, m_j, m_i)
# Append to results
probability_results <- rbind(probability_results, data.frame(
predator = predators$Species[i],
prey = prey$Species[j],
probability = probability
))
}
}
# Print results
print(probability_results)
#Empty matrix
species_list <- sp_mass$Species
num_species <- length(species_list)
feeding_matrix <- matrix(0, nrow = num_species, ncol = num_species, dimnames = list(species_list, species_list))
# Fill in the matrix with feeding probabilities based on body sizes
for (i in 1:num_species) {
for (j in 1:num_species) {
if (i != j) {  # Ensure we're not calculating a species eating itself
m_j <- sp_mass$f[i]
m_i <- sp_mass$f[j]
probability <- probEat(alpha, beta, gamma, m_j, m_i)
feeding_matrix[i, j] <- probability
}
}
}
# Now use the carnivores vector to zero out interactions involving herbivores
feeding_matrix <- sweep(feeding_matrix, 2, carnivores, "*")  # Zero out columns of herbivores
# Print the row and column sums
row_sums <- rowSums(feeding_matrix)
col_sums <- colSums(feeding_matrix)
# Print the sums to see feeding interactions
print("Row sums (predator feeding counts):") #number of species each predator feeds on
# How likely a predator (species i) is to feed on any of the prey species (species j), summed across all prey species.
print(row_sums)
print("Column sums (prey being fed upon counts):") #number of predators feeding on each prey species
# The total feeding probability for that species as prey (across all predators).
print(col_sums)
